// void Player::Update(float & timeElapsed)
// {
// 	float displacement = timeElapsed * _speed;
// 	glm::vec3 pos = _model.GetPosition();
// 	BoundingBox box = this->getBoundingBox();
// 	float moveToX;
// 	float moveToY;
// 	int randomNumGen = (std::rand() % (4 + 1 - 1)) + 1;
if (_direction == 270)
			_model.Move(0 - displacement, 0);
		else if (_direction == 90)
			_model.Move(0 + displacement, 0);
		else if (_direction == 0)
			_model.Move(0 , 0 + displacement);
		else if (_direction == 180)
			_model.Move(0 , 0 - displacement);

// 	if (randomNumGen == 1)
// 	{
// 		if (_direction != 270) {
// 			_model.Rotate(270);
// 			_direction = 270;
// 		}
// 		box.x1 -= displacement;
// 		box.x2 -= displacement;
// 		if(GameObjectManager::collidesWith(box) == grass)
// 			_model.Move(0 - displacement, 0);
// 	}
// 	else if (randomNumGen == 2)
// 	{
// 		if (_direction != 90) {
// 			_model.Rotate(90);
// 			_direction = 90;
// 		}
// 		box.x1 += displacement + 5.2;
// 		box.x2 += displacement + 5.2;
// 			if(GameObjectManager::collidesWith(box) == grass)
// 		_model.Move(0 + displacement, 0);
// 	}
// 	else if (randomNumGen == 3)
// 	{
// 		if (_direction != 0) {
// 			_model.Rotate(0);
// 			_direction = 0;
// 		}
// 		box.y1 += displacement + 5.2;
// 		box.y2 += displacement + 5.2;
// 			if(GameObjectManager::collidesWith(box) == grass)
// 		_model.Move(0 , 0 + displacement);
// 	}
// 	else if (randomNumGen == eKeys::Right)
// 	{
// 		if (_direction != 180) {
// 			_model.Rotate(180);
// 			_direction = 180;
// 		}
// 		box.y1 -= displacement;
// 		box.y2 -= displacement;
// 			if(GameObjectManager::collidesWith(box) == grass)
// 		_model.Move(0 , 0 - displacement);
// 	}
// 	Game::_camera.LookAt(_model.GetPosition());
// }

void Player::Update(float & timeElapsed)
{
	float displacement = timeElapsed * _speed;
	glm::vec3 pos = _model.GetPosition();
	BoundingBox box = this->getBoundingBox();
	float moveToX;
	float moveToY;
	
		if (_direction == 270)
			_model.Move(0 - displacement, 0);
		else if (_direction == 90)
			_model.Move(0 + displacement, 0);
		else if (_direction == 0)
			_model.Move(0 , 0 + displacement);
		else if (_direction == 180)
			_model.Move(0 , 0 - displacement);

	// for (float i = 0; i < displacement; i += 0.01)
	// {
	// 	if (_direction == 270)
	// 		_model.Move(0 - 0.009, 0);
	// 	else if (_direction == 90)
	// 		_model.Move(0 + 0.009, 0);
	// 	else if (_direction == 0)
	// 		_model.Move(0 , 0 + 0.009);
	// 	else if (_direction == 180)
	// 		_model.Move(0 , 0 - 0.009);

	// }

	if (GameObjectManager::collidesWith(box) != grass)
	{
		// std::cout << "Direction: " << _direction << std::endl;
		if (_direction == 270)
			_model.Rotate(90);
		else if (_direction == 90)
			_model.Rotate(270);
		else if (_direction == 0)
			_model.Rotate(180);
		else if (_direction == 180)
			_model.Rotate(0);
		box.x1 -= displacement;
		box.x2 -= displacement;
		
	}


	if (Game::keyPressed() == eKeys::Up)
	{
		
			if (_direction != 270) 
			{
			_model.Rotate(270);
			_direction = 270;
		}
		box.x1 -= displacement;
		box.x2 -= displacement;
		if(GameObjectManager::collidesWith(box) == grass)
			_model.Move(0 - displacement, 0);
	}
	else if (Game::keyPressed() == eKeys::Down)
	{
		if (_direction != 90) {
			_model.Rotate(90);
			_direction = 90;
		}
		box.x1 += displacement + 0.2;
		box.x2 += displacement + 0.2;
			if(GameObjectManager::collidesWith(box) == grass)
		_model.Move(0 + displacement, 0);
	}
	else if (Game::keyPressed() == eKeys::Left)
	{
		if (_direction != 0) {
			_model.Rotate(0);
			_direction = 0;
		}
		box.y1 += displacement + 0.2;
		box.y2 += displacement + 0.2;
			if(GameObjectManager::collidesWith(box) == grass)
		_model.Move(0 , 0 + displacement);
	}
	else if (Game::keyPressed() == eKeys::Right)
	{
		if (_direction != 180) {
			_model.Rotate(180);
			_direction = 180;
		}
		box.y1 -= displacement;
		box.y2 -= displacement;
			if(GameObjectManager::collidesWith(box) == grass)
		_model.Move(0 , 0 - displacement);
	}
	Game::_camera.LookAt(_model.GetPosition());
}
